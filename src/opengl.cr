################################################################################
# OpenGL 4.5
################################################################################
# https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/index.php
# https://www.khronos.org/opengl/wiki/OpenGL_Type

lib LibGL
  alias Enum = UInt32
  alias IntPtr = UInt64 # Depend of the system
  alias SizeIntPtr = UInt64 # Depend of the system
  ##############################################################################
  # API Entry Points
  ##############################################################################
  # -> A
  fun active_shader_program = glActiveShaderProgram(pipeline : UInt32, program : UInt32) : Void
  fun active_texture = glActiveTexture(texture : Enum) : Void
  fun attach_shader = glAttachShader(program : UInt32, shader : UInt32) : Void
  # -> B
  fun begin_conditional_render = glBeginConditionalRender(id : UInt32, mode : Enum) : Void
  fun begin_query = glBeginQuery(target : Enum, id : UInt32) : Void
  fun begin_query_indexed = glBeginQueryIndexed(target : Enum, index : UInt32, id : UInt32) : Void
  fun begin_transform_feedback = glBeginTransformFeedback(primitiveMode : Enum) : Void
  fun bind_attrib_location = glBindAttribLocation(program : UInt32, index : UInt32, name : UInt8*) : Void
  fun bind_buffer = glBindBuffer(target : Enum, buffer : UInt32) : Void
  fun bind_buffer_base = glBindBufferBase(target : Enum, index : UInt32, buffer : UInt32) : Void
  fun bind_buffer_range = glBindBufferRange(target : Enum, index : UInt32, buffer : UInt32, offset : IntPtr, size : SizeIntPtr) : Void
  fun bind_buffers_base = glBindBuffersBase(target : Enum, first : UInt32, count : UInt32, buffers : UInt32*) : Void
  fun bind_buffers_range = glBindBuffersRange(target : Enum, first : UInt32, count : UInt32, buffers : UInt32*, offsets : IntPtr*, sizes : IntPtr*) : Void 
  fun bind_frag_data_location = glBindFragDataLocation(program : UInt32, colorNumber : UInt32, name : UInt8*) : Void
  fun bind_frag_data_location_indexed = glBindFragDataLocationIndexed(program : UInt32, colorNumber : UInt32, index : UInt32, name : UInt8*) : Void



  fun bind_framebuffer = glBindFramebuffer(target : UInt32, framebuffer : UInt32) : Void
  fun bind_image_texture = glBindImageTexture(unit : UInt32, texture : UInt32, level : Int32, layered : Bool, layer : Int32, access : UInt32, format : UInt32) : Void
  fun bind_image_textures = glBindImageTextures(first : UInt32, count : Int32, textures : UInt32*) : Void
  fun bind_program_pipeline = glBindProgramPipeline(pipeline : UInt32) : Void
  fun bind_renderbuffer = glBindRenderbuffer(target : UInt32, renderbuffer : UInt32) : Void
  fun bind_sampler = glBindSampler(unit : UInt32, sampler : UInt32) : Void
  fun bind_samplers = glBindSamplers(first : UInt32, count : Int32, samplers : UInt32*) : Void
  fun bind_texture = glBindTexture(target : UInt32, texture : UInt32) : Void
  fun bind_textures = glBindTextures(first : UInt32, count : Int32, textures : UInt32*) : Void
  fun bind_texture_unit = glBindTextureUnit(unit : UInt32, texture : UInt32) : Void
  fun bind_transform_feedback = glBindTransformFeedback(target : UInt32, id : UInt32) : Void
  fun bind_vertex_array = glBindVertexArray(array : UInt32) : Void
  fun bind_vertex_buffer = glBindVertexBuffer(bindingindex : UInt32, buffer : UInt32, offset : GLintptr, stride : Int32) : Void
  fun bind_vertex_buffers = glBindVertexBuffers(first : GLuint, count : GLsizei, buffers : GLuint*, offsets : GLintptr*, strides : GLsizei*);
  fun blend_color = glBlendColor(red : Float32, green : Float32, blue : Float32, alpha : Float32) : Void
  fun blend_equation = glBlendEquation(mode : UInt32) : Void
  fun blend_equation_i = glBlendEquationi(buf : UInt32, mode : UInt32) : Void
  fun blend_equation_separate = glBlendEquationSeparate(modeRGB : UInt32, modeAlpha : UInt32) : Void
  fun blend_equation_separate_i = glBlendEquationSeparatei(buf : UInt32, modeRGB : UInt32, modeAlpha : UInt32) : Void
  fun blend_func = glBlendFunc(sfactor : UInt32, dfactor : UInt32) : Void
  fun blend_func_i = glBlendFunci(buf : UInt32, sfactor : UInt32, dfactor : UInt32) : Void
  fun blend_func_separate = glBlendFuncSeparate(srcRGB : UInt32, dstRGB : UInt32, srcAlpha : UInt32, dstAlpha : UInt32) : Void
  fun blend_func_separate_i = glBlendFuncSeparatei(buf : UInt32, srcRGB : UInt32, dstRGB : UInt32, srcAlpha : UInt32, dstAlpha : UInt32) : Void
  fun blit_framebuffer = glBlitFramebuffer(srcX0 : Int32, srcY0 : Int32, srcX1 : Int32, srcY1 : Int32, dstX0 : Int32, dstY0 : Int32, dstX1 : Int32, dstY1 : Int32, mask : GLbitfield, filter : UInt32) : Void
  fun blit_named_framebuffer = glBlitNamedFramebuffer(readFramebuffer : UInt32, drawFramebuffer : UInt32, srcX0 : Int32, srcY0 : Int32, srcX1 : Int32, srcY1 : Int32, dstX0 : Int32, dstY0 : Int32, dstX1 : Int32, dstY1 : Int32, mask : GLbitfield, filter : UInt32) : Void
  fun buffer_data = glBufferData(target : UInt32, size : GLsizeiptr, data : Void*, usage : UInt32) : Void
  fun buffer_storage = glBufferStorage(target : UInt32, size : GLsizeiptr, data : Void*, flags : GLbitfield) : Void
  fun buffer_sub_data = glBufferSubData(target : UInt32, offset : GLintptr, size : GLsizeiptr, data : Void*) : Void
  # -> C
  fun check_framebuffer_status = glCheckFramebufferStatus(target : UInt32) : UInt32
  fun check_named_framebuffer_status = glCheckNamedFramebufferStatus(framebuffer : UInt32, target : UInt32) : UInt32
  fun clamp_color = glClampColor(target : UInt32, clamp : UInt32) : Void
  fun clear = glClear(mask : GLbitfield) : Void
  fun clear_buffer_data = glClearBufferData(target : UInt32, internalformat : UInt32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_buffer_fi = glClearBufferfi(buffer : UInt32, drawbuffer : Int32, depth : Float32, stencil : Int32) : Void
  fun clear_buffer_fv = glClearBufferfv(buffer : UInt32, drawbuffer : Int32, value : Float32*) : Void
  fun clear_buffer_iv = glClearBufferiv(buffer : UInt32, drawbuffer : Int32, value : Int32*) : Void
  fun clear_buffer_sub_data = glClearBufferSubData(target : UInt32, internalformat : UInt32, offset : GLintptr, size : GLsizeiptr, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_buffer_uiv = glClearBufferuiv(buffer : UInt32, drawbuffer : Int32, value : UInt32*) : Void
  fun clear_color = glClearColor(red : Float32, green : Float32, blue : Float32, alpha : Float32) : Void
  fun clear_depth = glClearDepth(depth : Float64) : Void
  fun clear_depth_f = glClearDepthf(depth : Float32) : Void
  fun clear_named_buffer_data = glClearNamedBufferData(buffer : UInt32, internalformat : UInt32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_named_buffer_sub_data = glClearNamedBufferSubData(buffer : UInt32, internalformat : UInt32, offset : GLintptr, size : GLsizeiptr, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_named_framebuffer_fi = glClearNamedFramebufferfi(framebuffer : UInt32, buffer : UInt32, drawbuffer : Int32, depth : Float32, stencil : Int32) : Void
  fun clear_named_framebuffer_fv = glClearNamedFramebufferfv(framebuffer : UInt32, buffer : UInt32, drawbuffer : Int32, value : Float32*) : Void
  fun clear_named_framebuffer_iv = glClearNamedFramebufferiv(framebuffer : UInt32, buffer : UInt32, drawbuffer : Int32, value : Int32*) : Void
  fun clear_named_framebuffer_uiv = glClearNamedFramebufferuiv(framebuffer : UInt32, buffer : UInt32, drawbuffer : Int32, value : UInt32*) : Void
  fun clear_stencil = glClearStencil(s : Int32) : Void
  fun clear_tex_image = glClearTexImage(texture : UInt32, level : Int32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_tex_sub_image = glClearTexSubImage(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, type : UInt32, data : Void*) : Void
  fun client_wait_sync = glClientWaitSync(sync : GLsync, flags : GLbitfield, timeout : UInt64) : UInt32
  fun clip_control = glClipControl(origin : UInt32, depth : UInt32) : Void
  fun color_mask = glColorMask(red : Bool, green : Bool, blue : Bool, alpha : Bool) : Void
  fun color_mask_i = glColorMaski(buf : UInt32, red : Bool, green : Bool, blue : Bool, alpha : Bool) : Void
  fun compile_shader = glCompileShader(shader : UInt32) : Void
  fun compressed_tex_image_1d = glCompressedTexImage1D(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, border : Int32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_image_2d = glCompressedTexImage2D(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, border : Int32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_image_3d = glCompressedTexImage3D(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, border : Int32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_sub_image_1d = glCompressedTexSubImage1D(target : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_sub_image_2d = glCompressedTexSubImage2D(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_sub_image_3d = glCompressedTexSubImage3D(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_texture_sub_image_1d = glCompressedTextureSubImage1D(texture : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_texture_sub_image_2d = glCompressedTextureSubImage2D(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_texture_sub_image_3d = glCompressedTextureSubImage3D(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun copy_buffer_sub_data = glCopyBufferSubData(readTarget : UInt32, writeTarget : UInt32, readOffset : GLintptr, writeOffset : GLintptr, size : GLsizeiptr) : Void
  fun copy_image_sub_data = glCopyImageSubData(srcName : UInt32, srcTarget : UInt32, srcLevel : Int32, srcX : Int32, srcY : Int32, srcZ : Int32, dstName : UInt32, dstTarget : UInt32, dstLevel : Int32, dstX : Int32, dstY : Int32, dstZ : Int32, srcWidth : Int32, srcHeight : Int32, srcDepth : Int32) : Void
  fun copy_named_buffer_sub_data = glCopyNamedBufferSubData(readBuffer : UInt32, writeBuffer : UInt32, readOffset : GLintptr, writeOffset : GLintptr, size : GLsizeiptr) : Void
  fun copy_tex_image_1d = glCopyTexImage1D(target : UInt32, level : Int32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, border : Int32) : Void
  fun copy_tex_image_2d = glCopyTexImage2D(target : UInt32, level : Int32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, height : Int32, border : Int32) : Void
  fun copy_tex_sub_image_1d = glCopyTexSubImage1D(target : UInt32, level : Int32, xoffset : Int32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_tex_sub_image_2d = glCopyTexSubImage2D(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_tex_sub_image_3d = glCopyTexSubImage3D(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_texture_sub_image_1d = glCopyTextureSubImage1D(texture : UInt32, level : Int32, xoffset : Int32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_texture_sub_image_2d = glCopyTextureSubImage2D(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_texture_sub_image_3d = glCopyTextureSubImage3D(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun create_buffers = glCreateBuffers(n : Int32, buffers : UInt32*) : Void
  fun create_framebuffers = glCreateFramebuffers(n : Int32, framebuffers : UInt32*) : Void
  fun create_program = glCreateProgram : UInt32
  fun create_program_pipelines = glCreateProgramPipelines(n : Int32, pipelines : UInt32*) : Void
  fun create_queries = glCreateQueries(target : UInt32, n : Int32, ids : UInt32*) : Void
  fun create_renderbuffers = glCreateRenderbuffers(n : Int32, renderbuffers : UInt32*) : Void
  fun create_samplers = glCreateSamplers(n : Int32, samplers : UInt32*) : Void
  fun create_shader = glCreateShader(shaderType : UInt32) : UInt32
  fun create_shader_program_v = glCreateShaderProgramv(type : UInt32, count : Int32, strings : UInt8**) : UInt32
  fun create_textures = glCreateTextures(target : UInt32, n : Int32, textures : UInt32*) : Void
  fun create_transform_feedbacks = glCreateTransformFeedbacks(n : Int32, ids : UInt32*) : Void
  fun create_vertex_arrays = glCreateVertexArrays(n : Int32, arrays : UInt32*) : Void
  fun cull_face = glCullFace(mode : UInt32) : Void
  # -> D
  # fun debug_message_callback = glDebugMessageCallback(DEBUGPROC callback, userParam : Void*) : Void
  fun debug_message_control = glDebugMessageControl(source : UInt32, type : UInt32, severity : UInt32, count : Int32, ids : UInt32*, enabled : Bool) : Void
  fun debug_message_insert = glDebugMessageInsert(source : UInt32, type : UInt32, id : UInt32, severity : UInt32, length : Int32, message : UInt32*) : Void
  fun delete_buffers = glDeleteBuffers(n : Int32, buffers : UInt32*) : Void
  fun delete_framebuffers = glDeleteFramebuffers(n : Int32, framebuffers : UInt32*) : Void
  fun delete_program = glDeleteProgram(program : UInt32) : Void
  fun delete_program_pipelines = glDeleteProgramPipelines(n : Int32, pipelines : UInt32*) : Void
  fun delete_queries = glDeleteQueries(n : Int32, ids : UInt32*) : Void
  fun delete_renderbuffers = glDeleteRenderbuffers(n : Int32, renderbuffers : UInt32*) : Void
  fun delete_samplers = glDeleteSamplers(n : Int32, samplers : UInt32*) : Void
  fun delete_shader = glDeleteShader(shader : UInt32) : Void
  fun delete_sync = glDeleteSync(sync : GLsync) : Void
  fun delete_textures = glDeleteTextures(n : Int32, textures : UInt32*) : Void
  fun delete_transform_feedbacks = glDeleteTransformFeedbacks(n : Int32, ids : UInt32*) : Void
  fun delete_vertex_arrays = glDeleteVertexArrays(n : Int32, arrays : UInt32*) : Void
  fun depth_func = glDepthFunc(func : UInt32) : Void
  fun depth_mask = glDepthMask(flag : Bool) : Void
  fun depth_range = glDepthRange(nearVal : Float64, farVal : Float64) : Void
  fun depth_range_array_v = glDepthRangeArrayv(first : UInt32, count : Int32, v : Float64*) : Void
  fun depth_range_f = glDepthRangef(nearVal : Float32, farVal : Float32) : Void
  fun depth_range_indexed = glDepthRangeIndexed(index : UInt32, nearVal : Float64, farVal : Float64) : Void
  fun detach_shader = glDetachShader(program : UInt32, shader : UInt32) : Void
  fun disable = glDisable(cap : UInt32) : Void
  fun disable_i = glDisablei(cap : UInt32, index : UInt32) : Void
  fun disable_vertex_array_attrib = glDisableVertexArrayAttrib(vaobj : UInt32, index : UInt32) : Void
  fun disable_vertex_attrib_array = glDisableVertexAttribArray(index : UInt32) : Void
  fun dispatch_compute = glDispatchCompute(num_groups_x : UInt32, num_groups_y : UInt32, num_groups_z : UInt32) : Void
  fun dispatch_compute_indirect = glDispatchComputeIndirect(indirect : GLintptr) : Void
  fun draw_arrays = glDrawArrays(mode : UInt32, first : Int32, count : Int32) : Void
  fun draw_arrays_indirect = glDrawArraysIndirect(mode : GLenum, indirect : Void*) : Void
  fun draw_arrays_instanced = glDrawArraysInstanced(mode : UInt32, first : Int32, count : Int32, instancecount : Int32) : Void
  fun draw_arrays_instanced_base_instance = glDrawArraysInstancedBaseInstance(mode : UInt32, first : Int32, count : Int32, instancecount : Int32, baseinstance : UInt32) : Void
  fun draw_buffer = glDrawBuffer(buf : UInt32) : Void
  fun draw_buffers = glDrawBuffers(n : Int32, bufs : UInt32*) : Void
  fun draw_elements = glDrawElements(mode : GLenum, count : GLsizei, type : GLenum, indices : Void*) : Void
  fun draw_elements_base_vertex = glDrawElementsBaseVertex(mode : GLenum, count : GLsizei, type : GLenum, indices : Void*, basevertex : Int32) : Void
  fun draw_elements_indirect = glDrawElementsIndirect(mode : GLenum, type : GLenum, indirect : Void*) : Void
  fun draw_elements_instanced = glDrawElementsInstanced(mode : GLenum, count : GLsizei, type : GLenum, indices : Void*, instancecount : GLsizei) : Void
  fun draw_elements_instanced_base_instance = glDrawElementsInstancedBaseInstance(mode : GLenum, count : GLsizei, type : GLenum, indices : Void*, instancecount : GLsizei, baseinstance : UInt32) : Void
  fun draw_elements_instanced_base_vertex = glDrawElementsInstancedBaseVertex(mode : GLenum, count : GLsizei, type : GLenum, indices : Void*, instancecount : GLsizei, basevertex : Int32) : Void
  fun draw_elements_instanced_base_vertex_base_instance = glDrawElementsInstancedBaseVertexBaseInstance(mode : GLenum, count : GLsizei, type : GLenum, indices : Void*, instancecount : GLsizei, basevertex : Int32, baseinstance : UInt32) : Void
  fun draw_range_elements = glDrawRangeElements(mode : GLenum, start : UInt32, _end : UInt32, count : GLsizei, type : GLenum, indices : Void*) : Void
  fun draw_range_elements_base_vertex = glDrawRangeElementsBaseVertex(mode : GLenum, start : UInt32, _end : UInt32, count : GLsizei, type : GLenum, indices : Void*, basevertex : Int32) : Void
  fun draw_transform_feedback = glDrawTransformFeedback(mode : UInt32, id : UInt32) : Void
  fun draw_transform_feedback_instanced = glDrawTransformFeedbackInstanced(mode : UInt32, id : UInt32, instancecount : Int32) : Void
  fun draw_transform_feedback_stream = glDrawTransformFeedbackStream(mode : UInt32, id : UInt32, stream : UInt32) : Void
  fun draw_transform_feedback_stream_instanced = glDrawTransformFeedbackStreamInstanced(mode : UInt32, id : UInt32, stream : UInt32, instancecount : Int32) : Void
  # -> E
  fun enable = glEnable(cap : UInt32) : Void
  fun enable_i = glEnablei(cap : UInt32, index : UInt32) : Void
  fun enable_vertex_array_attrib = glEnableVertexArrayAttrib(vaobj : UInt32, index : UInt32) : Void
  fun enable_vertex_attrib_array = glEnableVertexAttribArray(index : UInt32) : Void
  fun end_conditional_render = glEndConditionalRender : Void
  fun end_query = glEndQuery(target : UInt32) : Void
  fun end_query_indexed = glEndQueryIndexed(target : UInt32, index : UInt32) : Void
  fun end_transform_feedback = glEndTransformFeedback : Void
  # -> F
  fun fence_sync = glFenceSync(condition : UInt32, flags : GLbitfield) : GLsync
  fun finish = glFinish : Void
  fun flush = glFlush : Void
  fun flush_mapped_buffer_range = glFlushMappedBufferRange(target : UInt32, offset : GLintptr, length : GLsizeiptr) : Void
  fun flush_mapped_named_buffer_range = glFlushMappedNamedBufferRange(buffer : UInt32, offset : GLintptr, length : GLsizeiptr) : Void
  fun framebuffer_parameter_i = glFramebufferParameteri(target : UInt32, pname : UInt32, param : Int32) : Void
  fun framebuffer_renderbuffer = glFramebufferRenderbuffer(target : UInt32, attachment : UInt32, renderbuffertarget : UInt32, renderbuffer : UInt32) : Void
  fun framebuffer_texture = glFramebufferTexture(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32) : Void
  fun framebuffer_texture_1d = glFramebufferTexture1D(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32) : Void
  fun framebuffer_texture_2d = glFramebufferTexture2D(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32) : Void
  fun framebuffer_texture_3d = glFramebufferTexture3D(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32, layer : Int32) : Void
  fun framebuffer_texture_layer = glFramebufferTextureLayer(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32, layer : Int32) : Void
  fun front_face = glFrontFace(mode : UInt32) : Void
  # -> G
  fun gen_Buffers = glGenBuffers(n : Int32, buffers : UInt32*) : Void
  fun generate_mipmap = glGenerateMipmap(target : UInt32) : Void
  fun generate_texture_mipmap = glGenerateTextureMipmap(texture : UInt32) : Void
  fun gen_framebuffers = glGenFramebuffers(n : Int32, ids : UInt32*) : Void
  fun gen_program_pipelines = glGenProgramPipelines(n : Int32, pipelines : UInt32*) : Void
  fun gen_queries = glGenQueries(n : Int32, ids : UInt32*) : Void
  fun gen_renderbuffers = glGenRenderbuffers(n : Int32, renderbuffers : UInt32*) : Void
  fun gen_samplers = glGenSamplers(n : Int32, samplers : UInt32*) : Void
  fun gen_textures = glGenTextures(n : Int32, textures : UInt32*) : Void
  fun gen_transform_feedbacks = glGenTransformFeedbacks(n : Int32, ids : UInt32*) : Void
  fun gen_vertex_arrays = glGenVertexArrays(n : Int32, arrays : UInt32*) : Void
  fun get_active_atomic_counter_buffer_iv = glGetActiveAtomicCounterBufferiv(program : UInt32, bufferIndex : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_active_attrib = glGetActiveAttrib(program : UInt32, index : UInt32, bufSize : Int32, length : Int32*, size : Int32*, type : UInt32*, name : UInt8*) : Void
  fun get_active_subroutine_name = glGetActiveSubroutineName(program : UInt32, shadertype : UInt32, index : UInt32, bufSize : Int32, length : Int32*, name : UInt8*) : Void
  fun get_active_subroutine_uniform_iv = glGetActiveSubroutineUniformiv(program : UInt32, shadertype : UInt32, index : UInt32, pname : UInt32, values : Int32*) : Void
  fun get_active_subroutine_uniform_name = glGetActiveSubroutineUniformName(program : UInt32, shadertype : UInt32, index : UInt32, bufSize : Int32, length : Int32*, name : UInt8*) : Void
  fun get_active_uniform = glGetActiveUniform(program : UInt32, index : UInt32, bufSize : Int32, length : Int32*, size : Int32*, type : UInt32*, name : UInt8*) : Void
  fun get_active_uniform_block_iv = glGetActiveUniformBlockiv(program : UInt32, uniformBlockIndex : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_active_uniform_block_name = glGetActiveUniformBlockName(program : UInt32, uniformBlockIndex : UInt32, bufSize : Int32, length : Int32*, uniformBlockName : UInt8*) : Void
  fun get_active_uniform_name = glGetActiveUniformName(program : UInt32, uniformIndex : UInt32, bufSize : Int32, length : Int32*, uniformName : UInt8*) : Void
  fun get_active_uniforms_iv = glGetActiveUniformsiv(program : UInt32, uniformCount : Int32, uniformIndices : UInt32*, pname : UInt32, params : Int32*) : Void
  fun get_attached_shaders = glGetAttachedShaders(program : UInt32, maxCount : Int32, count : Int32*, shaders : UInt32*) : Void
  fun get_attrib_location = glGetAttribLocation(program : UInt32, name : UInt8*) : Int32
  fun get_boolean_iv = glGetBooleani_v(target : GLenum, index : UInt32,  data : Bool*) : Void
  fun get_boolean_v = glGetBooleanv(pname : GLenum,  data : GLboolean*) : Void
  fun get_buffer_parameter_i64v = glGetBufferParameteri64v(target : UInt32, value : UInt32, data : Int64*) : Void
  fun get_buffer_parameter_iv = glGetBufferParameteriv(target : UInt32, value : UInt32, data : Int32*) : Void
  fun get_buffer_pointer_v = glGetBufferPointerv(target : UInt32, pname : UInt32, params : Void**) : Void
  fun get_buffer_sub_data = glGetBufferSubData(target : UInt32, offset : GLintptr, size : GLsizeiptr, data : Void*) : Void
  fun get_compressed_tex_image = glGetCompressedTexImage(target : UInt32, level : Int32, pixels : Void*) : Void
  fun get_compressed_texture_image = glGetCompressedTextureImage(texture : UInt32, level : Int32, bufSize :  Int32, pixels : Void*) : Void
  fun get_compressed_texture_sub_image = glGetCompressedTextureSubImage(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : GLsizei, height : GLsizei, depth : GLsizei, bufSize : GLsizei, pixels : Void*) : Void
  fun get_debug_message_log = glGetDebugMessageLog(count : UInt32, bufSize : GLsizei, sources : GLenum*, types : GLenum*, ids : GLuint*, severities : GLenum*, lengths : GLsizei*, messageLog : UInt8*) : UInt32
  fun get_double_iv = glGetDoublei_v(target : UInt32, index : UInt32, data : Float64*) : Void
  fun get_double_v = glGetDoublev(pname : UInt32, data : Float64*) : Void
  fun get_error = glGetError : GLenum
  fun get_float_iv = glGetFloati_v(target : UInt32, index : UInt32, data : Float32*) : Void
  fun get_float_v = glGetFloatv(pname : UInt32, data : Float32*) : Void
  fun get_frag_data_index = glGetFragDataIndex(program : UInt32, name : UInt8*) : Int32
  fun get_frag_data_location = glGetFragDataLocation(program : UInt32, name : UInt8*) : Int32
  fun get_framebuffer_attachment_parameter_iv = glGetFramebufferAttachmentParameteriv(target : UInt32, attachment : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_framebuffer_parameter_iv = glGetFramebufferParameteriv(target : GLenum, pname : GLenum, params : Int32*) : Void
  fun get_graphics_reset_status =glGetGraphicsResetStatus : GLenum
  fun get_integer64_iv = glGetInteger64i_v(target : UInt32, index : UInt32, data : Int64*) : Void
  fun get_integer64_v = glGetInteger64v(pname : UInt32, data : Int64*) : Void
  fun get_integer_iv = glGetIntegeri_v(target : UInt32, index : UInt32, data : Int32*) : Void
  fun get_integer_v = glGetIntegerv(pname : UInt32, data : Int32*) : Void
  fun get_internal_format_iv = glGetInternalformativ(target : GLenum, internalformat : GLenum, pname : GLenum, bufSize : GLsizei, params : Int32*) : Void
  fun get_internal_format_i64v = glGetInternalformati64v(target : GLenum, internalformat : GLenum, pname : GLenum, bufSize : GLsizei, params : Int64*) : Void
  fun get_multisample_fv = glGetMultisamplefv(pname : GLenum, index : UInt32, val : Float32*) : Void
  fun get_named_buffer_parameter_i64v = glGetNamedBufferParameteri64v(buffer : UInt32, pname : UInt32, params : Int64*) : Void
  fun get_named_buffer_parameter_iv = glGetNamedBufferParameteriv(buffer : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_named_buffer_pointer_v = glGetNamedBufferPointerv(buffer : UInt32, pname : UInt32, params : Void**) : Void
  fun get_named_buffer_sub_data = glGetNamedBufferSubData(buffer : UInt32, offset : GLintptr, size : GLsizeiptr, data : Void*) : Void
  fun get_named_framebuffer_attachment_parameter_iv = glGetNamedFramebufferAttachmentParameteriv(framebuffer : UInt32, attachment : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_named_framebuffer_parameter_iv = glGetNamedFramebufferParameteriv(framebuffer : UInt32, pname : GLenum, param : Int32*) : Void
  fun get_named_renderbuffer_parameter_iv = glGetNamedRenderbufferParameteriv(renderbuffer : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_n_compressed_tex_image = glGetnCompressedTexImage(target : UInt32, level : Int32, bufSize : Int32, pixels : Void*) : Void
  fun get_n_tex_image = glGetnTexImage(target : UInt32, level : Int32, format : UInt32, type : UInt32, bufSize : Int32, pixels : Void*) : Void
  fun get_n_uniform_dv =  glGetnUniformdv(program : UInt32, location : Int32, bufSize : GLsizei, params : Float64*) : Void
  fun get_n_uniform_fv = glGetnUniformfv(program : UInt32, location : Int32, bufSize : GLsizei, params : Float32*) : Void
  fun get_n_uniform_iv = glGetnUniformiv(program : UInt32, location : Int32, bufSize : GLsizei, params : Int32*) : Void
  fun get_n_uniform_uiv = glGetnUniformuiv(program : UInt32, location : Int32, bufSize : GLsizei, params : UInt32*) : Void
  fun get_object_label = glGetObjectLabel(identifier : GLenum, name : UInt32, bufSize : GLsizei, length : GLsizei*, label : UInt8*) : Void
  fun get_object_ptr_label = glGetObjectPtrLabel(ptr : Void*, bufSize : GLsizei, length : GLsizei*, label : UInt8*) : Void
  fun get_pointer_v = glGetPointerv(pname : GLenum, params : Void**) : Void
  fun get_program_binary = glGetProgramBinary(program : UInt32, bufSize : GLsizei, length : GLsizei*, binaryFormat : GLenum*, binary : Void*) : Void
  fun get_program_info_log = glGetProgramInfoLog(program : UInt32, maxLength : GLsizei, length : GLsizei*, infoLog : UInt8*) : Void
  fun get_program_interface_iv = glGetProgramInterfaceiv(program : UInt32, programInterface : GLenum, pname : GLenum, params : Int32*) : Void
  fun get_program_iv = glGetProgramiv(program : UInt32, pname : GLenum, params : Int32*) : Void
  fun get_program_pipeline_info_log = glGetProgramPipelineInfoLog(pipeline : UInt32, bufSize : GLsizei, length : GLsizei*, infoLog : UInt8*) : Void
  fun get_program_pipeline_iv = glGetProgramPipelineiv(pipeline : UInt32, pname : GLenum, params : Int32*) : Void
  fun get_program_resource_index = glGetProgramResourceIndex(program : UInt32, programInterface : GLenum,  name : UInt8*) : UInt32
  fun get_program_resource_iv = glGetProgramResourceiv(program : UInt32, programInterface : GLenum, index : UInt32, propCount : GLsizei, props : GLenum*, bufSize : GLsizei, length : GLsizei*, params : Int32*) : Void
  fun get_program_resource_location =  glGetProgramResourceLocation(program : UInt32, programInterface : GLenum, name : UInt8*) : Int32
  fun get_program_resource_location_index = glGetProgramResourceLocationIndex(program : UInt32, programInterface : GLenum, name : UInt8*) : Int32
  fun get_program_resource_name = glGetProgramResourceName(program : UInt32, programInterface : GLenum, index : UInt32, bufSize : GLsizei, length : GLsizei*, name : UInt8*) : Void
  fun get_program_stage_iv = glGetProgramStageiv(program : UInt32, shadertype : GLenum, pname : GLenum, values : Int32*) : Void
  fun get_query_buffer_object_i64v = glGetQueryBufferObjecti64v(id : UInt32, buffer : UInt32, pname : GLenum, offset : GLintptr) : Void
  fun get_query_buffer_object_iv = glGetQueryBufferObjectiv(id : UInt32, buffer : UInt32, pname : GLenum, offset : GLintptr) : Void
  fun get_query_buffer_object_ui64v = glGetQueryBufferObjectui64v(id : UInt32, buffer : UInt32, pname : GLenum, offset : GLintptr) : Void
  fun get_query_buffer_object_uiv = glGetQueryBufferObjectuiv(id : UInt32, buffer : UInt32, pname : GLenum, offset : GLintptr) : Void
  fun get_query_index_ediv = glGetQueryIndexediv(target : GLenum, index : UInt32, pname : GLenum, params : Int32*) : Void
  fun get_query_iv = glGetQueryiv(target : GLenum, pname : GLenum, params : Int32*) : Void
  fun get_query_object_i64v = glGetQueryObjecti64v(id : UInt32, pname : GLenum, params : Int64*) : Void
  fun get_query_object_iv = glGetQueryObjectiv(id : UInt32, pname : GLenum, params : Int32*) : Void
  fun get_query_object_ui64v = glGetQueryObjectui64v(id : UInt32, pname : GLenum, params : UInt64*) : Void
  fun get_query_object_uiv = glGetQueryObjectuiv(id : UInt32, pname : GLenum, params : UInt32*) : Void
  fun get_renderbuffer_parameter_iv = glGetRenderbufferParameteriv(target : Enum, pname : Enum, params : Int32*) : Void
  fun get_sampler_parameter_fv = glGetSamplerParameterfv(sampler : UInt32, pname : Enum, params : Float32*) : Void
  fun get_sampler_parameter_Iiv = glGetSamplerParameterIiv(sampler : UInt32, pname : Enum, params : Int32*) : Void
  fun get_sampler_parameter_Iuiv =  glGetSamplerParameterIuiv(sampler : UInt32, pname : Enum, params : UInt32*) : Void
  fun get_sampler_parameter_iv = glGetSamplerParameteriv(sampler : UInt32, pname : Enum, params : Int32*) : Void
  fun get_shader_info_log = glGetShaderInfoLog(shader : UInt32, maxLength : GLsizei, length : GLsizei*, infoLog : UInt8*) : Void
  fun get_shader_iv = glGetShaderiv(shader : UInt32, pname : Enum, params : Int32*) : Void
  fun get_shader_precision_format = glGetShaderPrecisionFormat(shaderType : Enum, precisionType : Enum, range : Int32*, precision : Int32*) : Void
  fun get_shader_source = glGetShaderSource(shader : UInt32, bufSize : GLsizei, length : GLsizei*, source : UInt8*) : Void
  fun get_string = glGetString(name : Enum) : GLubyte*
  fun get_string_i = glGetStringi(name : Enum, index : UInt32) : GLubyte* 
  fun get_subroutine_index = glGetSubroutineIndex(program : UInt32, shadertype : Enum, name : UInt8*) : UInt32
  fun get_subroutine_uniform_location = glGetSubroutineUniformLocation(program : UInt32, shadertype : Enum, name : UInt8*) : Int32
  fun get_sync_iv = glGetSynciv(sync : GLsync, pname : Enum, bufSize : GLsizei, length : GLsizei*, values : Int32*) : Void
  fun get_tex_image = glGetTexImage(target : UInt32, level : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun get_tex_level_parameter_fv = glGetTexLevelParameterfv(target : Enum, level : Int32, pname : Enum, params : Float32*) : Void
  fun get_tex_level_parameter_iv = glGetTexLevelParameteriv(target : UInt32, level : Int32, pname : UInt32, params : Int32*) : Void
  fun get_tex_parameter_fv = glGetTexParameterfv(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_tex_parameter_i_iv = glGetTexParameterIiv(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_parameter_i_uiv = glGetTexParameterIuiv(target : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_tex_parameter_iv = glGetTexParameteriv(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_texture_image = glGetTextureImage(texture : UInt32, level : Int32, format : UInt32, type : UInt32, bufSize : Int32, pixels : Void*) : Void
  fun get_texture_level_parameter_fv = glGetTextureLevelParameterfv(texture : UInt32, level : Int32, pname : UInt32, params : Float32*) : Void
  fun get_texture_level_parameter_iv = glGetTextureLevelParameteriv(texture : UInt32, level : Int32, pname : UInt32, params : Int32*) : Void
  fun get_texture_parameter_fv = glGetTextureParameterfv(texture : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_texture_parameter_i_iv = glGetTextureParameterIiv(texture : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_texture_parameter_i_uiv = glGetTextureParameterIuiv(texture : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_texture_parameter_iv = glGetTextureParameteriv(texture : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_texture_sub_image = glGetTextureSubImage(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : GLsizei, height : GLsizei, depth : GLsizei, format : Enum, type : Enum, bufSize : GLsizei, pixels : Void*) : Void
  fun get_transform_feedback_i64_v = glGetTransformFeedbacki64_v(xfb : UInt32, pname : Enum, index : UInt32, param : Int64*) : Void
  fun get_transform_feedback_i_v = glGetTransformFeedbacki_v(xfb : UInt32, pname : Enum, index : UInt32, param : Int32*) : Void
  fun get_transform_feedback_iv = glGetTransformFeedbackiv(xfb : UInt32, pname : Enum, param : Int32*) : Void
  fun get_transform_feedback_varying = glGetTransformFeedbackVarying(program : UInt32, index : UInt32, bufSize : GLsizei, length : GLsizei*, size : GLsizei*, type : Enum*, name : UInt8*) : Void
  fun get_uniform_block_index = glGetUniformBlockIndex(program : UInt32, uniformBlockName : UInt8*) : UInt32
  fun get_uniform_dv = glGetUniformdv(program : UInt32, location : Int32, params : Float64*) : Void
  fun get_uniform_fv = glGetUniformfv(program : UInt32, location : Int32, params : Float32*) : Void
  fun get_uniform_indices = glGetUniformIndices(program : UInt32, uniformCount : GLsizei, uniformNames : UInt8**, uniformIndices : UInt32*) : Void
  fun get_uniform_iv = glGetUniformiv(program : UInt32, location : Int32, params : Int32*) : Void
  fun get_uniform_location = glGetUniformLocation(program : UInt32, name : UInt8*) : Int32
  fun get_uniform_subroutine_uiv = glGetUniformSubroutineuiv(shadertype : Enum, location : Int32, values : UInt32*) : Void
  fun get_uniform_uiv = glGetUniformuiv(program : UInt32, location : Int32, params : UInt32*) : Void
  fun get_vertex_array_indexed_64iv = glGetVertexArrayIndexed64iv(vaobj : UInt32, index : UInt32, pname : Enum, param : Int64*) : Void
  fun get_vertex_array_indexed_iv = glGetVertexArrayIndexediv(vaobj : UInt32, index : UInt32, pname : Enum, param : Int32*) : Void
  fun get_vertex_array_iv = glGetVertexArrayiv(vaobj : UInt32, pname : Enum, param : Int32*) : Void
  fun get_vertex_attrib_dv = glGetVertexAttribdv(index : UInt32, pname : Enum, params : Float64*) : Void
  fun get_vertex_attrib_fv = glGetVertexAttribfv(index : UInt32, pname : Enum, params : Float32*) : Void
  fun get_vertex_attrib_i_iv = glGetVertexAttribIiv(index : UInt32, pname : Enum, params : Int32*) : Void
  fun get_vertex_attrib_i_uiv = glGetVertexAttribIuiv(index : UInt32, pname : Enum, params : UInt32*) : Void
  fun get_vertex_attrib_iv = glGetVertexAttribiv(index : UInt32, pname : Enum , params : Int32*) : Void
  fun get_vertex_attrib_ldv = glGetVertexAttribLdv(index : UInt32, pname : Enum, params : Float64*) : Void
  fun get_vertex_attrib_pointer_v = glGetVertexAttribPointerv(index : UInt32 , pname : Enum, pointer : Void**) : Void
  # -> H
  fun hint = glHint(target : Enum, mode : Enum) : Void
  # -> I
  fun invalidate_buffer_data = glInvalidateBufferData(buffer : UInt32) : Void
  fun invalidate_buffer_sub_data = glInvalidateBufferSubData(buffer : UInt32, offset : GLintptr, length : GLsizeiptr) : Void
  fun invalidate_framebuffer = glInvalidateFramebuffer(target : Enum, numAttachments : GLsizei, attachments : Enum*) : Void
  fun invalidate_named_framebuffer_data = glInvalidateNamedFramebufferData(framebuffer : UInt32, numAttachments : GLsizei, attachments : Enum*) : Void
  fun invalidate_named_framebuffer_sub_data = glInvalidateNamedFramebufferSubData(framebuffer : UInt32, numAttachments : GLsizei, attachments : Enum*, x : Int32, y : Int32, width : GLsizei, height : GLsizei) : Void
  fun invalidate_sub_framebuffer = glInvalidateSubFramebuffer(target : Enum, numAttachments : GLsizei, attachments : Enum*, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun invalidate_tex_image = glInvalidateTexImage(texture : UInt32, level : Int32) : Void
  fun invalidate_tex_sub_image = glInvalidateTexSubImage(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : GLsizei, height : GLsizei, depth : GLsizei) : Void
  fun is_buffer = glIsBuffer(buffer : UInt32) : Bool
  fun is_enabled = glIsEnabled(cap : Enum) : Bool
  fun is_enabled_i = glIsEnabledi(cap : Enum, index : UInt32) : Bool
  fun is_framebuffer = glIsFramebuffer(framebuffer : UInt32) : Bool
  fun is_program = glIsProgram(program : UInt32) : Bool
  fun is_program_pipeline = glIsProgramPipeline(pipeline : UInt32) : Bool
  fun is_query = glIsQuery(id : UInt32) : Bool
  fun is_renderbuffer = glIsRenderbuffer(renderbuffer : UInt32) : Bool
  fun is_sampler = glIsSampler(id : UInt32) : Bool
  fun is_shader = glIsShader(shader : UInt32) : Bool
  fun is_sync = glIsSync(sync : GLsync) : Bool
  fun is_texture = glIsTexture(texture : UInt32) : Bool
  fun is_transform_feedback = glIsTransformFeedback(id : UInt32) : Bool
  fun is_vertex_array = glIsVertexArray(array : UInt32) : Bool
  # -> L
  fun line_width = glLineWidth(width : Float32) : Void
  fun link_program = glLinkProgram(program : UInt32) : Void
  fun logic_op = glLogicOp(opcode : GLenum) : Void
  # -> N
  fun named_buffer_data = glNamedBufferData(buffer : UInt32, size : GLsizeiptr, data : Void*, usage : Enum) : Void
  fun named_buffer_storage = glNamedBufferStorage(buffer : UInt32, size : GLsizeiptr, data : Void*, flags : GLbitfield) : Void
  fun named_buffer_sub_data = glNamedBufferSubData(buffer : UInt32, offset : GLintptr, size : GLsizeiptr, data : Void*) : Void
  fun named_framebuffer_draw_buffer = glNamedFramebufferDrawBuffer(framebuffer : UInt32, buf : UInt32) : Void
  fun named_framebuffer_draw_buffers = glNamedFramebufferDrawBuffers(framebuffer : UInt32, n : Int32, bufs : UInt32*) : Void
  fun named_framebuffer_parameter_i = glNamedFramebufferParameteri(framebuffer : UInt32, pname : Enum, param : Int32) : Void
  fun named_framebuffer_read_buffer = glNamedFramebufferReadBuffer(framebuffer : UInt32, mode : Enum) : Void
  fun named_framebuffer_renderbuffer = glNamedFramebufferRenderbuffer(framebuffer : UInt32, attachment : Enum, renderbuffertarget : Enum, renderbuffer : UInt32) : Void
  fun named_framebuffer_texture = glNamedFramebufferTexture(framebuffer : UInt32, attachment : Enum, texture : UInt32, level : Int32) : Void
  fun named_framebuffer_texture_layer = glNamedFramebufferTextureLayer(framebuffer : UInt32, attachment : Enum, texture : UInt32, level : Int32, layer : Int32) : Void
  fun named_renderbuffer_storage = glNamedRenderbufferStorage(renderbuffer : UInt32, internalformat : Enum, width : GLsizei, height : GLsizei) : Void
  fun named_renderbuffer_storage_multisample = glNamedRenderbufferStorageMultisample(renderbuffer : UInt32, samples : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei) : Void
  # -> O
  fun object_label = glObjectLabel(identifier : Enum, name : UInt32, length : GLsizei, label : UInt8*) : Void
  fun object_ptr_label = glObjectPtrLabel(ptr : Void*, length : GLsizei, label : UInt8*) : Void
  # -> P
  fun patch_parameter_fv = glPatchParameterfv(pname : Enum, values : Float32*) : Void
  fun patch_parameter_i = glPatchParameteri(pname : GLenum, value : Int32) : Void
  fun pause_transform_feedback = glPauseTransformFeedback : Void
  fun pixel_store_f = glPixelStoref(pname : Enum, param : Float32) : Void
  fun pixel_store_i = glPixelStorei(pname : Enum, param : Int32) : Void
  fun point_parameter_f = glPointParameterf(pname : Enum, param : Float32) : Void
  fun point_parameter_fv = glPointParameterfv(pname : Enum, params : Float32*) : Void
  fun point_parameter_i = glPointParameteri(pname : Enum, param : Int32) : Void
  fun point_parameter_iv = glPointParameteriv(pname : Enum, params : Int32*) : Void
  fun point_size = glPointSize(size : Float32) : Void
  fun polygon_mode = glPolygonMode(face : Enum, mode : Enum) : Void
  fun polygon_offset = glPolygonOffset(factor : Float32, units : Float32) : Void
  fun pop_debug_group = glPopDebugGroup : Void
  fun primitive_restart_index = glPrimitiveRestartIndex(index : UInt32) : Void
  fun program_binary = glProgramBinary(program : UInt32, binaryFormat : Enum, binary : Void*, length : GLsizei) : Void
  fun program_parameter_i = glProgramParameteri(program : UInt32, pname : Enum, value : Int32 ) : Void
  fun program_uniform_1f = glProgramUniform1f(program : UInt32, location : Int32, v0 : Float32) : Void
  fun program_uniform_1fv = glProgramUniform1fv(program : UInt32, location : Int32, count : GLsizei, value : Float32*) : Void
  fun program_uniform_1i = glProgramUniform1i(program : UInt32, location : Int32, v0 : Int32) : Void
  fun program_uniform_1iv = glProgramUniform1iv(program : UInt32, location : Int32, count : GLsizei, value : Int32*) : Void
  fun program_uniform_1ui = glProgramUniform1ui(program : UInt32, location : Int32, v0 : UInt32) : Void
  fun program_uniform_1uiv = glProgramUniform1uiv(program : UInt32, location : Int32, count : GLsizei, value : UInt32*) : Void
  fun program_uniform_2f = glProgramUniform2f(program : UInt32, location : Int32, v0 : Float32, v1 : Float32) : Void
  fun program_uniform_2fv = glProgramUniform2fv(program : UInt32, location : Int32, count : GLsizei, value : Float*) : Void
  fun program_uniform_2i = glProgramUniform2i(program : UInt32, location : Int32, v0 : Int32, v1 : Int32) : Void
  fun program_uniform_2iv = glProgramUniform2iv(program : UInt32, location : Int32, count : GLsizei, value : Int32*) : Void
  fun program_uniform_2ui = glProgramUniform2ui(program : UInt32, location : Int32, v0 : Int32, v1 : UInt32) : Void
  fun program_uniform_2uiv = glProgramUniform2uiv(program : UInt32, location : Int32, count : GLsizei, value : UInt32*) : Void
  fun program_uniform_3f = glProgramUniform3f(program : UInt32, location : Int32, v0 : Float32, v1 : Float32, v2 : Float32) : Void
  fun program_uniform_3fv = glProgramUniform3fv(program : UInt32, location : Int32, count : GLsizei, value : Float32*) : Void
  fun program_uniform_3i = glProgramUniform3i(program : UInt32, location : Int32, v0 : Int32, v1 : Int32, v2 : Int32) : Void
  fun program_uniform_3iv = glProgramUniform3iv(program : UInt32, location : Int32, count : GLsizei, value : Int32*) : Void
  fun program_uniform_3ui = glProgramUniform3ui(program : UInt32, location : Int32, v0 : Int32, v1 : Int32, v2 : UInt32) : Void
  fun program_uniform_3uiv = glProgramUniform3uiv(program : UInt32, location : Int32, count : GLsizei, value : UInt32*) : Void
  fun program_uniform_4f = glProgramUniform4f(program : UInt32, location : Int32, v0 : Float32, v1 : Float32, v2 : Float32, v3 : Float32) : Void
  fun program_uniform_4fv = glProgramUniform4fv(program : UInt32, location : Int32, count : GLsizei, value : Float32*) : Void
  fun program_uniform_4i = glProgramUniform4i(program : UInt32, location : Int32, v0 : Int32, v1 : Int32, v2 : Int32, v3 : Int32) : Void
  fun program_uniform_4iv = glProgramUniform4iv(program : UInt32, location : Int32, count : GLsizei, value : Int32*) : Void
  fun program_uniform_4ui = glProgramUniform4ui(program : UInt32, location : Int32, v0 : Int32, v1 : Int32, v2 : Int32, v3 : UInt32) : Void
  fun program_uniform_4uiv = glProgramUniform4uiv(program : UInt32, location : Int32, count : GLsizei, value : UInt32*) : Void
  fun program_uniform_matrix_2fv = glProgramUniformMatrix2fv(program : UInt32, location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun program_uniform_matrix_2x3fv = glProgramUniformMatrix2x3fv(program : UInt32, location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun program_uniform_matrix_2x4fv = glProgramUniformMatrix2x4fv(program : UInt32, location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun program_uniform_matrix_3fv = glProgramUniformMatrix3fv(program : UInt32, location : Int32, count : GLsizei, transpose : Bool, value : Float*) : Void
  fun program_uniform_matrix_3x2fv = glProgramUniformMatrix3x2fv(program : UInt32, location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun program_uniform_matrix_3x4fv = glProgramUniformMatrix3x4fv(program : UInt32, location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun program_uniform_matrix_4fv = glProgramUniformMatrix4fv(program : UInt32, location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun program_uniform_matrix_4x2fv = glProgramUniformMatrix4x2fv(program : UInt32, location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun program_uniform_matrix_4x3fv = glProgramUniformMatrix4x3fv(program : UInt32, location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun provoking_vertex = glProvokingVertex(provokeMode : Enum) : Void
  fun push_debug_group = glPushDebugGroup(source : Enum, id : UInt32, length : GLsizei, message : UInt8*) : Void
  # -> Q
  fun query_counter = glQueryCounter(id : UInt32, target : Enum) : Void
  # -> R
  fun read_buffer = glReadBuffer(mode : Enum) : Void
  fun read_n_pixels = glReadnPixels(x : Int32, y : Int32, width : GLsizei, height : GLsizei, format : Enum, type : Enum, bufSize : GLsizei, data : Void*) : Void
  fun read_pixels = glReadPixels(x : Int32, y : Int32, width : GLsizei, height : GLsizei, format : Enum, type : Enum, data : Void*) : Void
  fun release_shader_compiler = glReleaseShaderCompiler : Void
  # removedTypes
  fun renderbuffer_storage = glRenderbufferStorage(target : Enum, internalformat : Enum, width : GLsizei, height : GLsizei) : Void
  fun renderbuffer_storage_multisample = glRenderbufferStorageMultisample(target : Enum, samples : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei) : Void
  fun resume_transform_feedback = glResumeTransformFeedback : Void
  # -> S
  fun sample_coverage = glSampleCoverage(value : Float32, invert : Bool) : Void
  fun sample_maski = glSampleMaski(maskNumber : UInt32, mask : GLbitfield) : Void
  fun sampler_parameter_f = glSamplerParameterf(sampler : UInt32, pname : Enum, param : Float32) : Void
  fun sampler_parameter_fv = glSamplerParameterfv(sampler : UInt32, pname : Enum, params : Float32*) : Void
  fun sampler_parameter_i = glSamplerParameteri(sampler : UInt32 , pname : Enum, param : Int32) : Void
  fun sampler_parameter_i_iv = glSamplerParameterIiv(sampler : UInt32, pname : Enum, params : Int32*) : Void
  fun sampler_parameter_i_uiv = glSamplerParameterIuiv(sampler : UInt32, pname : Enum, params : UInt32*) : Void
  fun sampler_parameter_iv = glSamplerParameteriv(sampler : UInt32, pname : Enum, params : Int32*) : Void
  fun scissor = glScissor(x : Int32 , y : Int32, width : GLsizei, height : GLsizei) : Void
  fun scissor_array_v = glScissorArrayv(first : UInt32, count : GLsizei, v : Int32*) : Void
  fun scissor_indexed = glScissorIndexed(index : UInt32, left : Int32, bottom : Int32, width : GLsizei, height : GLsizei) : Void
  fun scissor_indexed_v = glScissorIndexedv(index : UInt32, v : Int32*) : Void
  fun shader_binary = glShaderBinary(count : GLsizei, shaders : UInt32*, binaryFormat : Enum, binary : Void*, length : GLsizei) : Void
  fun shader_source = glShaderSource(shader : UInt32, count : GLsizei, string : UInt8**, length : Int32*) : Void
  fun shader_storage_block_binding = glShaderStorageBlockBinding(program : UInt32, storageBlockIndex : UInt32, storageBlockBinding : UInt32) : Void
  fun stencil_func = glStencilFunc(func : Enum, ref : Int32, mask : UInt32) : Void
  fun stencil_func_separate = glStencilFuncSeparate(face : Enum, func : Enum, ref : Int32, mask : UInt32) : Void
  fun stencil_mask = glStencilMask(mask : UInt32) : Void
  fun stencil_mask_separate = glStencilMaskSeparate(face : Enum, mask : UInt32) : Void
  fun stencil_op = glStencilOp(sfail : Enum, dpfail : Enum, dppass : Enum) : Void
  fun stencil_op_separate = glStencilOpSeparate(face : Enum, sfail : Enum , dpfail : Enum, dppass : Enum) : Void
  # -> T
  fun tex_buffer = glTexBuffer(target : Enum, internalformat : Enum, buffer : UInt32) : Void
  fun tex_buffer_range = glTexBufferRange(target : Enum, internalformat : Enum, buffer : UInt32, offset : GLintptr, size : GLsizeiptr) : Void
  fun tex_image_1d = glTexImage1D(target : Enum, level : Int32, internalformat : Int32, width : GLsizei, border : Int32, format : Enum, type : Enum, data : Void*) : Void
  fun tex_image_2d = glTexImage2D(target : Enum, level : Int32, internalformat : Int32, width : GLsizei, height : GLsizei, border : Int32, format : Enum, type : Enum, data : Void*) : Void
  fun tex_image_2d_multisample = glTexImage2DMultisample(target : Enum, samples : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei, fixedsamplelocations : Bool) : Void
  fun tex_image_3d = glTexImage3D(target : Enum, level : Int32, internalformat : Int32, width : GLsizei, height : GLsizei, depth : GLsizei, border : Int32, format : Enum, type : Enum, data : Void*) : Void
  fun tex_image_3d_multisample = glTexImage3DMultisample(target : Enum, samples : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei, depth : GLsizei, fixedsamplelocations : Bool) : Void
  fun tex_parameter_f = glTexParameterf(target : Enum, pname : Enum, param : Float32) : Void
  fun tex_parameter_fv = glTexParameterfv(target : Enum, pname : Enum, params : Float32*) : Void
  fun tex_parameter_i = glTexParameteri(target : Enum, pname : Enum, param : Int32) : Void
  fun tex_parameter_i_iv = glTexParameterIiv(target : Enum, pname : Enum, params : Int32*) : Void
  fun tex_parameter_i_uiv = glTexParameterIuiv(target : Enum, pname : Enum, params : UInt32*) : Void
  fun tex_parameter_iv = glTexParameteriv(target : Enum, pname : Enum, params : Int32*) : Void
  fun tex_storage_1d = glTexStorage1D(target : Enum, levels : GLsizei, internalformat : Enum, width : GLsizei) : Void
  fun tex_storage_2d = glTexStorage2D(target : Enum, levels : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei) : Void
  fun tex_storage_2d_multisample = glTexStorage2DMultisample(target : Enum , samples : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei, fixedsamplelocations : Bool) : Void
  fun tex_storage_3d = glTexStorage3D(target : Enum, levels : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei, depth : GLsizei) : Void
  fun tex_storage_3d_multisample = glTexStorage3DMultisample(target : Enum, samples : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei, depth : GLsizei, fixedsamplelocations : Bool) : Void
  fun tex_sub_image_1d = glTexSubImage1D(target : Enum, level : Int32, xoffset : Int32, width : GLsizei, format : Enum, type : Enum, pixels : Void*) : Void
  fun tex_sub_image_2d = glTexSubImage2D(target : Enum, level : Int32, xoffset : Int32, yoffset : Int32, width : GLsizei, height : GLsizei, format : Enum, type : Enum, pixels : Void*) : Void
  fun tex_sub_image_3d = glTexSubImage3D(target : Enum, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : GLsizei, height : GLsizei, depth : GLsizei, format : Enum, type : Enum, pixels : Void*) : Void
  fun texture_barrier = glTextureBarrier : Void
  fun texture_buffer = glTextureBuffer(texture : UInt32, internalformat : Enum, buffer : UInt32) : Void
  fun texture_buffer_Range = glTextureBufferRange(texture : UInt32, internalformat : Enum, buffer : UInt32, offset : GLintptr, size : GLsizei) : Void
  fun texture_parameter_f = glTextureParameterf(texture : UInt32, pname : Enum, param : Float32) : Void
  fun texture_parameter_fv = glTextureParameterfv(texture : UInt32, pname : Enum, params : Float32*) : Void
  fun texture_parameter_i = glTextureParameteri(texture : UInt32, pname : Enum, param : Int32) : Void
  fun texture_parameter_i_iv = glTextureParameterIiv(texture : UInt32, pname : Enum, params : Int32*) : Void
  fun texture_parameter_i_uiv = glTextureParameterIuiv(texture : UInt32, pname : Enum, params : UInt32*) : Void
  fun texture_parameter_iv = glTextureParameteriv(texture : UInt32, pname : Enum, params : Int32*) : Void
  fun texture_storage_1d = glTextureStorage1D(texture : UInt32, levels : GLsizei, internalformat : Enum, width : GLsizei) : Void
  fun texture_storage_2d = glTextureStorage2D(texture : UInt32, levels : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei) : Void
  fun texture_storage_2d_multisample = glTextureStorage2DMultisample(texture : UInt32, samples : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei, fixedsamplelocations : Bool) : Void
  fun texture_storage_3d = glTextureStorage3D(texture : UInt32, levels : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei, depth : GLsizei) : Void
  fun texture_storage_3d_multisample = glTextureStorage3DMultisample(texture : UInt32, samples : GLsizei, internalformat : Enum, width : GLsizei, height : GLsizei, depth : GLsizei, fixedsamplelocations : Bool) : Void
  fun texture_sub_image_1d = glTextureSubImage1D(texture : UInt32, level : Int32, xoffset : Int32, width : GLsizei, format : Enum, type : Enum, pixels : Void*) : Void
  fun texture_sub_image_2d = glTextureSubImage2D(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : GLsizei, height : GLsizei, format : Enum, type : Enum, pixels : Void*) : Void
  fun texture_sub_image_3d = glTextureSubImage3D(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : GLsizei, height : GLsizei, depth : GLsizei, format : Enum, type : Enum, pixels : Void*) : Void
  fun texture_view = glTextureView(texture : UInt32, target : Enum, origtexture : UInt32, internalformat : Enum, minlevel : UInt32, numlevels : UInt32, minlayer : UInt32, numlayers : UInt32) : Void
  fun transform_feedback_buffer_base = glTransformFeedbackBufferBase(xfb : UInt32, index : UInt32, buffer : UInt32) : Void
  fun transform_feedback_buffer_range = glTransformFeedbackBufferRange(xfb : UInt32, index : UInt32, buffer : UInt32, offset : GLintptr, size : GLsizei) : Void
  fun transform_feedback_varyings = glTransformFeedbackVaryings(program : UInt32, count : GLsizei, varyings : UInt8**, bufferMode : Enum) : Void
  # -> U
  fun uniform_1f = glUniform1f(location : Int32, v0 : Float32) : Void
  fun uniform_1fv = glUniform1fv(location : Int32, count : GLsizei, value : Float32*) : Void
  fun uniform_1i = glUniform1i(location : Int32, v0 : Int32) : Void
  fun uniform_1iv = glUniform1iv(location : Int32, count : GLsizei, value : Int32*) : Void
  fun uniform_1ui = glUniform1ui(location : Int32, v0 : UInt32) : Void
  fun uniform_1uiv = glUniform1uiv(location : Int32, count : GLsizei, value : UInt32*) : Void
  fun uniform_2f = glUniform2f(location : Int32, v0 : Float32, v1 : Float32) : Void
  fun uniform_2fv = glUniform2fv(location : Int32, count : GLsizei, value : Float32*) : Void
  fun uniform_2i = glUniform2i(location : Int32, v0 : Int32, v1 : Int32) : Void
  fun uniform_2iv = glUniform2iv(location : Int32, count : GLsizei, value : Int32*) : Void
  fun uniform_2ui = glUniform2ui(location : Int32, v0 : UInt32, v1 : UInt32) : Void
  fun uniform_2uiv = glUniform2uiv(location : Int32, count : GLsizei, value : UInt32*) : Void
  fun uniform_3f = glUniform3f(location : Int32, v0 : Float32, v1 : Float32, v2 : Float32) : Void
  fun uniform_3fv = glUniform3fv(location : Int32, count : GLsizei, value : Float32*) : Void
  fun uniform_3i = glUniform3i(location : Int32, v0 : Int32, v1 : Int32, v2 : Int32) : Void
  fun uniform_3iv = glUniform3iv(location : Int32, count : GLsizei, value : Int32*) : Void
  fun uniform_3ui = glUniform3ui(location : Int32, v0 : UInt32, v1 : UInt32, v2 : UInt32) : Void
  fun uniform_3uiv = glUniform3uiv(location : Int32, count : GLsizei, value : UInt32*) : Void
  fun uniform_4f = glUniform4f(location : Int32, v0 : Float32, v1 : Float32, v2 : Float32, v3 : Float32) : Void
  fun uniform_4fv = glUniform4fv(location : Int32, count : GLsizei, value : Float32*) : Void
  fun uniform_4i = glUniform4i(location : Int32, v0 : Int32, v1 : Int32, v2 : Int32, v3 : Int32) : Void
  fun uniform_4iv = glUniform4iv(location : Int32, count : GLsizei, value : Int32*) : Void
  fun uniform_4ui = glUniform4ui(location : Int32, v0 : UInt32, v1 : UInt32, v2 : UInt32, v3 : UInt32) : Void
  fun uniform_4uiv = glUniform4uiv(location : Int32, count : GLsizei, value : UInt32*) : Void
  fun uniform_block_binding = glUniformBlockBinding(program : UInt32, uniformBlockIndex : UInt32, uniformBlockBinding : UInt32) : Void
  fun uniform_matrix_2fv = glUniformMatrix2fv(location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun uniform_matrix_2x3fv = glUniformMatrix2x3fv(location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun uniform_matrix_2x4fv = glUniformMatrix2x4fv(location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun uniform_matrix_3fv = glUniformMatrix3fv(location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun uniform_matrix_3x2fv = glUniformMatrix3x2fv(location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun uniform_matrix_3x4fv = glUniformMatrix3x4fv(location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun uniform_matrix_4fv = glUniformMatrix4fv(location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun uniform_matrix_4x2fv = glUniformMatrix4x2fv(location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun uniform_matrix_4x3fv = glUniformMatrix4x3fv(location : Int32, count : GLsizei, transpose : Bool, value : Float32*) : Void
  fun uniform_subroutines_uiv = glUniformSubroutinesuiv(shadertype : Enum, count : GLsizei, indices : UInt32*) : Void
  fun unmap_buffer = glUnmapBuffer(target : Enum) : Bool
  fun unmap_named_buffer = glUnmapNamedBuffer(buffer : UInt32) : Bool
  fun use_program = glUseProgram(program : UInt32) : Void
  fun use_program_Stages = glUseProgramStages(pipeline : UInt32, stages : GLbitfield, program : UInt32) : Void
  # -> V
  fun validate_program = glValidateProgram(program : UInt32) : Void
  fun validate_program_pipeline = glValidateProgramPipeline(pipeline : UInt32) : Void
  fun vertex_array_attrib_binding = glVertexArrayAttribBinding(vaobj : UInt32, attribindex : UInt32, bindingindex : UInt32) : Void
  fun vertex_array_attrib_format = glVertexArrayAttribFormat(vaobj : UInt32, attribindex : UInt32, size : Int32, type : Enum, normalized : Bool, relativeoffset : UInt32) : Void
  fun vertex_array_attrib_i_format = glVertexArrayAttribIFormat(vaobj : UInt32, attribindex : UInt32, size : Int32, type : Enum, relativeoffset : UInt32) : Void
  fun vertex_array_attrib_l_format = glVertexArrayAttribLFormat(vaobj : UInt32, attribindex : UInt32, size : Int32, type : Enum, relativeoffset : UInt32) : Void
  fun vertex_array_binding_divisor = glVertexArrayBindingDivisor(vaobj : UInt32, bindingindex : UInt32, divisor : UInt32) : Void
  fun vertex_array_element_buffer = glVertexArrayElementBuffer(vaobj : UInt32, buffer : UInt32) : Void
  fun vertex_array_vertex_buffer = glVertexArrayVertexBuffer(vaobj : UInt32, bindingindex : UInt32, buffer : UInt32, offset : GLintptr, stride : GLsizei) : Void
  fun vertex_array_vertex_buffers = glVertexArrayVertexBuffers(vaobj : UInt32, first : UInt32, count : GLsizei, buffers : UInt32*, offsets : GLintptr*, strides : GLsizei*) : Void
  fun vertex_attrib_1d = glVertexAttrib1d(index : UInt32, v0 : Float64) : Void
  fun vertex_attrib_1dv = glVertexAttrib1dv(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_1f = glVertexAttrib1f(index : UInt32, v0 : Float32) : Void
  fun vertex_attrib_1fv = glVertexAttrib1fv(index : UInt32, v : Float32*) : Void
  fun vertex_attrib_1s = glVertexAttrib1s(index : UInt32, v0 : Int16) : Void
  fun vertex_attrib_1sv = glVertexAttrib1sv(index : UInt32, v : Int16*) : Void
  fun vertex_attrib_2d = glVertexAttrib2d(index : UInt32, v0 : Float64, v1 : Float64) : Void
  fun vertex_attrib_2dv = glVertexAttrib2dv(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_2f = glVertexAttrib2f(index : UInt32, v0 : Float32, v1 : Float32) : Void
  fun vertex_attrib_2fv = glVertexAttrib2fv(index : UInt32, v : Float32*) : Void
  fun vertex_attrib_2s = glVertexAttrib2s(index : UInt32, v0 : Int16, v1 : Int16) : Void
  fun vertex_attrib_2sv = glVertexAttrib2sv(index : UInt32, v : Int16*) : Void
  fun vertex_attrib_3d = glVertexAttrib3d(index : UInt32, v0 : Float64, v1 : Float64, v2 : Float64) : Void
  fun vertex_attrib_3dv = glVertexAttrib3dv(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_3f = glVertexAttrib3f(index : UInt32, v0 : Float32, v1 : Float32, v2 : Float32) : Void
  fun vertex_attrib_3fv = glVertexAttrib3fv(index : UInt32, v : Float32*) : Void
  fun vertex_attrib_3s = glVertexAttrib3s(index : UInt32, v0 : Int8, v1 : Int8, v2 : Int8) : Void
  fun vertex_attrib_3sv = glVertexAttrib3sv(index : UInt32, v : Int8*) : Void
  fun vertex_attrib_4bv = glVertexAttrib4bv(index : UInt32, v : GLbyte*) : Void
  fun vertex_attrib_4d = glVertexAttrib4d(index : UInt32, v0 : Float64, v1 : Float64, v2 : Float64, v3 : Float64) : Void
  fun vertex_attrib_4dv = glVertexAttrib4dv(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_4f = glVertexAttrib4f(index : UInt32, v0 : Float32, v1 : Float32, v2 : Float32, v3 : Float32) : Void
  fun vertex_attrib_4fv = glVertexAttrib4fv(index : UInt32, v : Float32*) : Void
  fun vertex_attrib_4iv = glVertexAttrib4iv(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_4n_bv = glVertexAttrib4Nbv(index : UInt32, v : Int8*) : Void
  fun vertex_attrib_4n_iv = glVertexAttrib4Niv(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_4n_sv = glVertexAttrib4Nsv(index : UInt32, v : Int16*) : Void
  fun vertex_attrib_4n_ub = glVertexAttrib4Nub(index : UInt32, v0 : UInt8, v1 : UInt8, v2 : UInt8, v3 : UInt8) : Void
  fun vertex_attrib_4n_ubv = glVertexAttrib4Nubv(index : UInt32, v : UInt8*) : Void
  fun vertex_attrib_4n_uiv = glVertexAttrib4Nuiv(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_4n_usv = glVertexAttrib4Nusv(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib_4s = glVertexAttrib4s(index : UInt32, v0 : Int16, v1 : Int16, v2 : Int16, v3 : Int16) : Void
  fun vertex_attrib_4sv = glVertexAttrib4sv(index : UInt32, v : Int16*) : Void
  fun vertex_attrib_4ubv = glVertexAttrib4ubv(index : UInt32, v : UInt8*) : Void
  fun vertex_attrib_4uiv = glVertexAttrib4uiv(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_4usv = glVertexAttrib4usv(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib_binding = glVertexAttribBinding(attribindex : UInt32, bindingindex : UInt32) : Void
  fun vertex_attrib_divisor = glVertexAttribDivisor(index : UInt32, divisor : UInt32) : Void
  fun vertex_attrib_format = glVertexAttribFormat(attribindex : UInt32, size : Int32, type : Enum, normalized : Bool, relativeoffset : UInt32) : Void
  fun vertex_attrib_i_1i = glVertexAttribI1i(index : UInt32, v0 : Int32) : Void
  fun vertex_attrib_i_1iv = glVertexAttribI1iv(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_i_1ui = glVertexAttribI1ui(index : UInt32, v0 : UInt32) : Void
  fun vertex_attrib_i_1uiv = glVertexAttribI1uiv(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_i_2i = glVertexAttribI2i(index : UInt32, v0 : Int32, v1 : Int32) : Void
  fun vertex_attrib_i_2iv = glVertexAttribI2iv(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_i_2ui = glVertexAttribI2ui(index : UInt32, v0 : UInt32, v1 : UInt32) : Void
  fun vertex_attrib_i_2uiv = glVertexAttribI2uiv(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_i_3i = glVertexAttribI3i(index : UInt32, v0 : Int32, v1 : Int32, v2 : Int32) : Void
  fun vertex_attrib_i_3iv = glVertexAttribI3iv(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_i_3ui = glVertexAttribI3ui(index : UInt32, v0 : UInt32, v1 : UInt32, v2 : UInt32) : Void
  fun vertex_attrib_i_3uiv = glVertexAttribI3uiv(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_i_4bv = glVertexAttribI4bv(index : UInt32, v : GLbyte*) : Void
  fun vertex_attrib_i_4i = glVertexAttribI4i(index : UInt32, v0 : GLint, v1 : GLint, v2 : GLint, v3 : GLint) : Void
  fun vertex_attrib_i_4iv = glVertexAttribI4iv(index : UInt32, v : GLint*) : Void
  fun vertex_attrib_i_4sv = glVertexAttribI4sv(index : UInt32, v : GLshort*) : Void
  fun vertex_attrib_i_4ubv = glVertexAttribI4ubv(index : UInt32, v : GLubyte*) : Void
  fun vertex_attrib_i_4ui = glVertexAttribI4ui(index : GLuint, v0 : GLuint, v1 : GLuint, v2 : GLuint, v3 : GLuint) : Void
  fun vertex_attrib_i_4uiv = glVertexAttribI4uiv(index : GLuint, v : GLuint*) : Void
  fun vertex_attrib_i_4usv = glVertexAttribI4usv(index : GLuint, v : GLushort*) : Void
  fun vertex_attrib_i_format = glVertexAttribIFormat(attribindex : GLuint, size : GLint, type : GLenum, relativeoffset : GLuint) : Void
  fun vertex_attrib_i_pointer = glVertexAttribIPointer(index : GLuint, size : GLint, type : GLenum , stride : GLsizei, pointer : Void*) : Void
  fun vertex_attrib_l_1d = glVertexAttribL1d(index : GLuint , v0 : GLdouble) : Void
  fun vertex_attrib_l_1dv = glVertexAttribL1dv(index : GLuint , v : GLdouble*) : Void
  fun vertex_attrib_l_2d = glVertexAttribL2d(index : GLuint, v0 : GLdouble , v1 : GLdouble) : Void
  fun vertex_attrib_l_2dv = glVertexAttribL2dv(index : GLuint, v : GLdouble*) : Void
  fun vertex_attrib_l_3d = glVertexAttribL3d(index : GLuint, v0 : GLdouble, v1 : GLdouble, v2 : GLdouble) : Void
  fun vertex_attrib_l_3dv = glVertexAttribL3dv(index : GLuint, v : GLdouble*) : Void
  fun vertex_attrib_l_4d = glVertexAttribL4d(index : GLuint, v0 : GLdouble, v1 : GLdouble, v2 : GLdouble, v3 : GLdouble) : Void
  fun vertex_attrib_l_4dv = glVertexAttribL4dv(index : GLuint, v : GLdouble*) : Void
  fun vertex_attrib_l_format = glVertexAttribLFormat(attribindex : GLuint, size : GLint, type : GLenum, relativeoffset : GLuint) : Void
  fun vertex_attrib_l_pointer = glVertexAttribLPointer(index : GLuint, size : GLint, type : GLenum, stride : GLsizei, pointer : Void*) : Void
  fun vertex_attrib_p_1ui = glVertexAttribP1ui(index : GLuint, type : GLenum, normalized : GLboolean, value : GLuint) : Void
  fun vertex_attrib_p_2ui = glVertexAttribP2ui(index : GLuint, type : GLenum, normalized : GLboolean, value : GLuint) : Void
  fun vertex_attrib_p_3ui = glVertexAttribP3ui(index : GLuint, type : GLenum, normalized : GLboolean, value : GLuint) : Void
  fun vertex_attrib_p_4ui = glVertexAttribP4ui(index : GLuint, type : GLenum, normalized : GLboolean, value : GLuint) : Void
  fun vertex_attrib_pointer = glVertexAttribPointer(index : GLuint, size : GLint, type : GLenum, normalized : GLboolean, stride : GLsizei, pointer : Void*) : Void
  fun vertex_binding_divisor = glVertexBindingDivisor(bindingindex : GLuint, divisor : GLuint) : Void
  fun viewport = glViewport(x : GLint, y : GLint, width : GLsizei, height : GLsizei) : Void
  fun viewport_array = glViewportArrayv(first : GLuint32 , count : GLsizei, v : GLfloat*) : Void
  fun viewport_array_v = glViewportArrayv(first : GLuint, count : GLsizei, v : GLfloat*) : Void
  # fun glViewportIndexed = 
  fun viewport_indexed_f = glViewportIndexedf(index : GLuint, x : GLfloat, y : GLfloat, w : GLfloat, h : GLfloat) : Void
  fun viewport_indexed_fv = glViewportIndexedfv(index : GLuint, v : GLfloat *) : Void
  # -> W
  fun wait_sync = glWaitSync(sync : GLsync, flags : GLbitfield, timeout : UInt64) : Void
end
